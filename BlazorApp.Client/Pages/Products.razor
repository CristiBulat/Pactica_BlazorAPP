@page "/products"
@using BlazorApp.Domain.Entities
@inject HttpClient Http

<PageTitle>Products</PageTitle>

<h1>Products</h1>

<p>
    <a href="/products/add" class="btn btn-primary">Add Product</a>
</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@product.Description</td>
                    <td>
                        <a href="/products/edit/@product.Id" class="btn btn-secondary">Edit</a>
                        <button class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        products = await Http.GetFromJsonAsync<List<Product>>("api/products");
    }

    private async Task DeleteProduct(int productId)
    {
        await Http.DeleteAsync($"api/products/{productId}");
        await LoadProducts(); // Refresh the list
        StateHasChanged();
    }
}